#include <iostream.h> 
#include <conio.h> 
 
class node 
{ 
    public: 
    int data; 
    node *next,*prev; 
}; 
 
class list 
{ 
node *head,*tail; 
public: 
list() 
{ 
head=tail=NULL; 
} 
void add_head(int); 
void add_tail(int); 
void insert_after(int, int); 
void display(); 
void del_head(); 
void del_tail(); 
void del_node(int); 
~list(){     // Destructor 
    delete head; 
    delete tail; 
} 
}; 
 
 
 
 
 
  
 
 
 
// Add node Head 
void list :: add_head(int d) 
{ 
node *temp=new node(); 
temp->next=NULL; 
temp->prev=NULL; 
temp->data=d; 
if(head==NULL) 
{ 
head=temp; 
tail=temp; 
} 
else 
{ 
head->prev=temp; 
temp->next=head; 
head=temp; 
} 
 
} 
 
// Add node at Tail 
void list::add_tail(int d) 
{ 
node *temp=new node(); 
temp->next=NULL; 
temp->prev=NULL; 
temp->data=d; 
if(tail!=NULL) 
{ 
tail->next=temp; 
temp->prev=tail; 
tail=temp; 
} 
 
  
 
 
 
} 
 
// Add node after 
void list::insert_after(int after,int d){ 
    node *temp=new node(); 
    node *trav; 
    trav=head; 
    temp->next=NULL; 
    temp->prev=NULL; 
    temp->data=d; 
    while(trav != NULL){ 
        if(trav->data == after){ 
            temp->next = trav->next; 
            temp->next->prev = temp; 
            trav->next = temp; 
            temp->prev = trav; 
        } 
        trav = trav->next; 
    } 
     
     
} 
 
// Display List 
void list::display() 
{ 
node *temp; 
temp=head; 
while(temp != NULL) 
{ 
cout<<temp->data<<" "; 
temp=temp->next; 
 
 
 
  
 
 
 
 
 
} 
} 
 
// Delete Head node 
void list::del_head() 
{ 
head=head->next; 
head->prev=NULL; 
} 
 
// Delete Tail node 
void list::del_tail() 
{ 
tail=tail->prev; 
tail->next=NULL; 
} 
 
// Delete a node 
void list::del_node(int n) 
{ 
node *trav; 
trav=head; 
while(trav!=NULL) 
{ 
if(trav->data==n) 
{ 
trav->next->prev=trav->prev; 
trav->prev->next=trav->next; 
} 
trav=trav->next; 
} 
} 
  
 
 
int main() 
{ 
list lst; 
int ch,d,after; 
//clrscr(); 
do{ 
cout<<"\n\n\t Menu"; 
cout<<"\n1.Insert at head"; 
cout<<"\n2.Insert at tail"; 
cout<<"\n3.Insert after"; 
cout<<"\n4.Delete at head"; 
cout<<"\n5.Delete at tail"; 
cout<<"\n6.Delete a node"; 
cout<<"\n7.Display list"; 
cout<<"\n8.Quit"; 
cout<<"\n Enter your choice[1-8]: "; 
cin>>ch; 
switch(ch) 
{ 
case 1: 
cout<<"\n Enter node:"; 
cin>>d; 
lst.add_head(d); 
break; 
 
case 2: 
cout<<"\n Insertion node"; 
cin>>d; 
lst.add_tail(d); 
break; 
 
case 3://node after 
cout<<"\n Enter after node"; 
  
 
 
 
cin>>after; 
cout<<"\n Enter node to add"; 
cin>>d; 
lst.insert_after(after,d); 
break; 
case 4: 
cout<<"\n Delete head node"; 
lst.del_head(); 
break; 
case 5: 
cout<<"\n Delete tail node"; 
lst.del_tail(); 
break; 
case 6: 
cout<<"\n Delete a given node"; 
cin>>d; 
lst.del_node(d); 
break; 
case 7: 
cout<<"\nDisplay List"; 
lst.display(); 
break; 
case 8: 
exit(0); 
} 
}while(1); 
return(0); 
} 
 
 
